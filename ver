6a7
>       use mKaps
19c20
<       integer i
---
>       integer i, j
52a54,57
>        case ('pKbind')
>            read(buffer, *, iostat=ios) pKbindread
>          if(rank.eq.0)print*,'Set ',trim(label),' = ',trim(buffer)
> 
100d104
<          print*, label, buffer, 'OK'
105d108
<          print*, label, buffer, 'OK'
180c183
<            read(buffer, *, iostat=ios) nst
---
>          read(buffer, *, iostat=ios) st
182,183c185
<            read(fh, *), (sts(i), i=1, nst)
<          if(rank.eq.0)print*, 'sts: ', sts
---
> 
204a207,230
>         case ('readkap')
>            read(buffer, *, iostat=ios) readkap
>          if(rank.eq.0)print*,'Set ',trim(label),' = ',trim(buffer)
> 
>           case ('nxkapbulk')
>            read(buffer, *, iostat=ios) nxkapbulk
>          if(rank.eq.0)print*,'Set ',trim(label),' = ',trim(buffer)
>            read(fh, *),(xkapbulks(i), i=1, nxkapbulk)
>          if(rank.eq.0)
>      &   print*, 'xkapbulks: ', (xkapbulks(j), j=1,nxkapbulk)
> 
>         case ('Kapd')
>            read(buffer, *, iostat=ios) Kapd
>          if(rank.eq.0)print*,'Set ',trim(label),' = ',trim(buffer)
> 
>          if(mod(Kapd,2).eq.0) then
>            if(rank.eq.0)print*,'Kapd should be odd!'
>            stop 
>          endif
> 
>          case ('nmonkap')
>          nmonkapbuffer = buffer
>          if(rank.eq.0)print*,'Set ',trim(label),' = ',trim(buffer)
>           
249,250d274
< 
< 
276a301,302
>       use mKaps
>       use mKaps_s
281a308,313
>       include 'mpif.h' ! MPI libraries
>       include 'MPI.h' ! MPI libraries
> 
>       integer listkap
> 
>       listkap = 1000
291,292c323,325
<         ALLOCATE (fs(cuantas))        
<         ALLOCATE (displ(cuantas, int(maxlong/2)))
---
> !        ALLOCATE (fs(cuantas))        
>         ALLOCATE (inc(cuantas, maxlong))        
> !        ALLOCATE (displ(cuantas, int(maxlong/2)))
305c338
<       ALLOCATE (Xu(dimR, dimR, -1:1))
---
>       ALLOCATE (Xu(dimR, dimR+1, -1:1))
309a343,371
> ! Kaps
> 
>       if(rank.eq.0) then
> 
>       ALLOCATE (KapsV(dimR, dimR+1, -(Kapd-1)/2:(Kapd-1)/2))
>       ALLOCATE (nKap(dimR*dimZ))
>       ALLOCATE (Kaplist_cell(dimR*dimZ, listkap))
> 
>       ALLOCATE (Kaps(dimR,dimR+1,-(Kapd-1)/2:(Kapd-1)/2,N_monomer))
>       ALLOCATE (Kaplist_value(dimR*dimZ, listkap, N_monomer))
>       ALLOCATE (kapmask(dimR*dimZ))
>     
>       endif
> 
>       ALLOCATE (xtotalbulk(N_poorsol))
>       ALLOCATE (fdisbulk(N_monomer))
>       ALLOCATE (xpotbulk(N_monomer))
> 
> ! Kaps S
> 
>       if(rank.eq.0) then
>       ALLOCATE (KapsV_s(dimR, dimR+1, -(Kapd-1)/2:(Kapd-1)/2))
>       ALLOCATE (nKap_s(dimR*dimZ))
>       ALLOCATE (Kaplist_s_cell(dimR*dimZ, listkap))
>       ALLOCATE (v0r(dimR*dimZ, listkap))
>       ALLOCATE (v0z(dimR*dimZ, listkap))
>       ALLOCATE (Kaplist_s_value(dimR*dimZ, listkap))
>       endif
> 
321c383
<       ALLOCATE (avpol(N_monomer, N_chains, dimR*dimZ))
---
>       ALLOCATE (avpol(N_monomer, N_chains+2, dimR*dimZ))
322a385,387
>       ALLOCATE (receptor(dimR*dimZ))
>       ALLOCATE (rhokap(dimR*dimZ))
>       ALLOCATE (rhokapb(dimR*dimZ))
331a397,398
>       ALLOCATE (funbound(N_monomer, dimR*dimZ))
>       ALLOCATE (fbound(N_monomer, dimR*dimZ, listkap))
